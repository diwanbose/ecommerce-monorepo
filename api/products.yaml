openapi: 3.0.0
info:
  title: Products Service API
  description: |
    API for managing product catalog and inventory. This service provides endpoints for:
    - Listing and searching products
    - Creating new products
    - Updating product details
    - Managing product inventory
    - Deleting products
  version: 1.0.0
  contact:
    name: Development Team
    email: dev@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.example.com
    description: Production server

tags:
  - name: products
    description: Product management operations

paths:
  /api/products:
    get:
      summary: List all products
      description: Returns a list of all available products
      operationId: listProducts
      tags:
        - products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new product
      description: Add a new product to the catalog
      operationId: createProduct
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/products/{id}:
    parameters:
      - name: id
        in: path
        description: |
          Unique identifier of the product. Must be a positive integer.
          Example: 12345
        required: true
        schema:
          type: integer
          format: uint64
    get:
      summary: Get a product by ID
      description: |
        Returns detailed information about a specific product by its ID.
        The response includes all product details including name, description,
        price, stock level, and timestamps.
      operationId: getProduct
      tags:
        - products
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a product
      description: |
        Updates an existing product's details. All fields in the request body
        will replace the existing values. Partial updates are not supported.
        The product must exist in the system.
      operationId: updateProduct
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a product
      description: |
        Permanently removes a product from the catalog. This operation cannot be undone.
        The product must exist in the system. Returns 204 on successful deletion.
      operationId: deleteProduct
      tags:
        - products
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: uint64
          description: Unique identifier for the product
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Detailed description of the product
        price:
          type: number
          format: float64
          description: Price of the product
        image:
          type: string
          description: URL to the product image
        stock:
          type: integer
          description: Current stock level
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
      required:
        - name
        - price
        - stock

    ProductInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Detailed description of the product
        price:
          type: number
          format: float64
          description: Price of the product
        image:
          type: string
          description: URL to the product image
        stock:
          type: integer
          description: Initial stock level
      required:
        - name
        - price
        - stock

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error 